-- Guardian Schema Migration
-- Run with: supabase db reset && supabase db push

-- Connected merchant accounts (Stripe Connect)
create table public.connected_accounts (
  id uuid default gen_random_uuid() primary key,
  stripe_account_id text not null unique,
  business_name text,
  status text default 'active',
  metadata jsonb,
  created_at timestamptz default now()
);

-- Raw webhook events we care about (subset for now)
create table public.payout_events (
  id bigint generated always as identity primary key,
  stripe_event_id text not null unique,
  stripe_payout_id text not null,
  stripe_account_id text not null,
  type text not null,
  amount bigint,
  currency text check (char_length(currency) = 3),
  event_data jsonb not null,
  created_at timestamptz default now()
);
create index payout_events_account_idx on public.payout_events (stripe_account_id);
create index payout_events_payout_idx on public.payout_events (stripe_payout_id);

-- Alerts generated by rule engine
create table public.alerts (
  id bigint generated always as identity primary key,
  alert_type text not null,          -- e.g. 'VELOCITY', 'BANK_SWAP'
  severity text not null check (severity in ('low','medium','high')),
  message text,
  stripe_payout_id text,
  stripe_account_id text,
  event_id bigint references public.payout_events(id) on delete cascade,
  resolved boolean default false,
  created_at timestamptz default now()
);
create index alerts_account_idx on public.alerts (stripe_account_id);
create index alerts_unresolved_idx on public.alerts (resolved) where resolved = false;

-- Seed data for local development
INSERT INTO public.connected_accounts (stripe_account_id, business_name, status, metadata)
VALUES (
  'acct_test123', 
  'Test Merchant LLC', 
  'active', 
  '{"contact_email": "merchant@example.com", "business_type": "company"}'::jsonb
)
ON CONFLICT (stripe_account_id) DO NOTHING; 